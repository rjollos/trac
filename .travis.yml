version: ~> 1.0
dist: bionic
language: python
python: 3.8
addons:
  apt:
    packages: [libapr1-dev, libaprutil1-dev, liblz4-dev, libutf8proc-dev, swig,
               firefox-geckodriver]
  homebrew:
    packages: [apr, apr-util, sqlite, zlib, lz4, utf8proc, swig, geckodriver]
  firefox: latest
cache:
  directories:
  - "$HOME/.cache/pip"
  - "$HOME/.pyenv"
  - "$HOME/src"
before_install:
- set -e
- test -n "$pyver" || pyver="$(python -c "$print_version")"
- |
  case "$tracdb" in
    postgresql)
      if [ "$TRAVIS_OS_NAME" = osx ]; then
        rm -rf /usr/local/var/postgres
        pg_ctl initdb --pgdata /usr/local/var/postgres
        pg_ctl -w start --pgdata /usr/local/var/postgres --log /usr/local/var/postgres/postgresql.log || {
          rc=$?
          cat /usr/local/var/postgres/postgresql.log
          exit $rc
        }
        createuser -s postgres
      fi
      tracdb_version="PostgreSQL: $(psql -U postgres -t -c 'SELECT version()')"
      echo "$tracdb_version"
      psql -U postgres -e -c "CREATE USER tracuser NOSUPERUSER NOCREATEDB CREATEROLE PASSWORD 'password';"
      psql -U postgres -e -c "CREATE DATABASE trac OWNER tracuser;"
      ;;
    mysql)
      tracdb_version="MySQL: $(mysql -u root -sN -e 'SELECT version()')"
      echo "$tracdb_version"
      mysql -u root -v -e "CREATE DATABASE trac DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
      mysql -u root -v -e "CREATE USER tracuser@localhost IDENTIFIED BY 'password';"
      mysql -u root -v -e "GRANT ALL ON trac.* TO tracuser@localhost; FLUSH PRIVILEGES;"
      ;;
    *)
      tracdb_version=
      ;;
  esac
- test -d "$HOME/.pip" || mkdir "$HOME/.pip"
- |
  {
    echo "[global]"
    echo "cache-dir = $HOME/.cache/pip"
    echo "[list]"
    echo "format = columns"
  } >"$HOME/.pip/pip.conf"
- |
  if [ "$TRAVIS_OS_NAME" = osx ]; then
    eval "$(pyenv init -)"
    pyver_latest="$(pyenv install -l | grep -E "^[ ]*${pyver/./\\.}\.[0-9]+$" | tail -1 | tr -d '[:blank:]')"
    venv="$HOME/venv-$pyver_latest"
    pyenv install --skip-existing $pyver_latest
    pyenv shell $pyver_latest
    pip install --upgrade virtualenv
    python -m virtualenv $venv
    source $venv/bin/activate
    pyenv --version
    pyenv versions
  fi
- pip install --upgrade pip setuptools wheel
- python --version
- pip list
install:
- set -e
- |
  if [ "$TRAVIS_BUILD_STAGE_NAME" = test ]; then
    requires='Jinja2 selenium lxml'
    if [ "$build" != minimum ]; then requires="$requires Babel Pygments docutils textile pytz"; fi
    if [ "$tracdb" = postgresql ]; then requires="$requires psycopg2"; fi
    if [ "$tracdb" = mysql ]; then requires="$requires PyMySQL"; fi
  else
    requires='Jinja2 Babel'
  fi
  pip install $requires
  python -c 'import sys, pkg_resources as p; p.require(sys.argv[1:])' $requires
- pip list
- |
  if [ "$build" != minimum -a "$TRAVIS_BUILD_STAGE_NAME" = test ]; then
  (
    set -ex
    test -d "$HOME/src" || mkdir "$HOME/src"
    if svn info "$HOME/src/subversion" >/dev/null 2>&1; then
      svn update -q "$HOME/src/subversion"
    else
      rm -rf "$HOME/src/subversion"
      svn checkout -q https://svn.apache.org/repos/asf/subversion/trunk "$HOME/src/subversion"
    fi
    svn info --show-item=last-changed-revision "$HOME/src/subversion" >/tmp/subversion-rev.txt
    if ! test -r "$HOME/src/subversion-rev.txt" \
      || ! test -r "$HOME/src/subversion-bin.tar.gz" \
      || ! diff -u "$HOME/src/subversion-rev.txt" /tmp/subversion-rev.txt
    then
      if git --git-dir "$HOME/src/py3c" count-objects >/dev/null 2>&1; then
        git --git-dir "$HOME/src/py3c" fetch origin
      else
        rm -rf "$HOME/src/py3c"
        git clone --mirror https://github.com/encukou/py3c "$HOME/src/py3c"
      fi
      test -d "$HOME/work" || mkdir "$HOME/work"
      svn export -q "$HOME/src/subversion" "$HOME/work/subversion"
      git --git-dir "$HOME/src/py3c" archive --format=tar --prefix=py3c/ v1.1 | tar xf - -C "$HOME/work"
      set +ex
      cd "$HOME/work/subversion"
      set -ex
      if [ "$TRAVIS_OS_NAME" = osx ]; then
        apr_config="$(brew --prefix apr)/bin/apr-1-config"
        apu_config="$(brew --prefix apr-util)/bin/apu-1-config"
        swig_bin="$(brew --prefix swig)/bin/swig"
      else
        apr_config=/usr/bin/apr-1-config
        apu_config=/usr/bin/apu-1-config
        swig_bin=/usr/bin/swig
      fi
      prefix="$(python -c 'import sys; print(sys.prefix)')"
      ./autogen.sh
      ./configure \
        --prefix="$prefix" \
        --with-apr="$apr_config" \
        --with-apr-util="$apu_config" \
        --with-swig="$swig_bin" \
        --with-py3c="$HOME/work/py3c" \
        --without-apxs \
        --without-doxygen \
        --without-berkeley-db \
        --without-gpg-agent \
        --without-gnome-keyring \
        --without-kwallet \
        --without-jdk \
        --disable-javahl \
        PYTHON="$(python -c 'import sys; print(sys.executable)')"
      sitedir="$(python -c '\
        import os, sys; \
        print(os.path.join(sys.prefix, "lib", \
                           "python{0}.{1}".format(*sys.version_info), \
                           "site-packages")); \
        ')"
      make \
        DESTDIR=/tmp/subversion-bin \
        swig_pydir="$sitedir/libsvn" \
        swig_pydir_extra="$sitedir/svn" \
        all swig-py install install-swig-py
      tar czf "$HOME/src/subversion-bin.tar.gz" -C /tmp/subversion-bin "${prefix#/}"
      mv /tmp/subversion-rev.txt "$HOME/src/subversion-rev.txt"
    fi
    tar xzf "$HOME/src/subversion-bin.tar.gz" -C /
    python -c 'from svn import core; print(str(core.SVN_VERSION, "ascii"))'
  )
  fi
- |
  case "$tracdb" in
    sqlite)   tracdb_uri='sqlite:test.db' ;;
    postgresql) tracdb_uri='postgres://tracuser:password@localhost/trac?schema=tractest' ;;
    mysql)    tracdb_uri='mysql://tracuser:password@localhost/trac?charset=utf8mb4' ;;
    *)        tracdb_uri= ;;
  esac
  echo ".uri = $tracdb_uri" >Makefile.cfg
- echo "$tracdb_version"
before_script:
- |
  if [ "$TRAVIS_OS_NAME" = linux -a "$build" != minimum -a \
       "$(/usr/bin/python -c "$print_version")" = "$(python -c "$print_version")" ]
  then
    print_sitelib='from distutils.sysconfig import get_python_lib; print(get_python_lib())'
    sitelib_global="$(/usr/bin/python -c "$print_sitelib")"
    sitelib_venv="$(python -c "$print_sitelib")"
    ln -s "$sitelib_global/svn" "$sitelib_venv/svn"
    ln -s "$sitelib_global/libsvn" "$sitelib_venv/libsvn"
    python -c 'from svn import core'
  fi
script:
- set -e
- if [ "$build" != minimum ]; then make compile; fi
- make Trac.egg-info unit-test functional-test;
before_deploy:
- cat contrib/travis/edgewall_host_key >> $HOME/.ssh/known_hosts
- keyfile=/tmp/id_rsa
- openssl aes-256-cbc -K $encrypted_c097e63a4ddf_key -iv $encrypted_c097e63a4ddf_iv
  -in contrib/travis/id_rsa.enc -out "$keyfile".base64 -d
- cat "$keyfile".base64 | base64 --decode >"$keyfile"
- chmod 0600 "$keyfile"
- pip install setuptools-git
- make compile release
notifications:
  email:
    recipients:
      secure: lIn4a3G6ww61t3o12DS4aWwEwD6Hl2kxcsZgkxvhU2MgzviJ5j3EBV5F/BlbQmR1BqM51qgDOXoQTO+y9cvzAYBkIy/gfLqZjAl0hfZep6iGZgl1cnUW4c5i9+wkF8PzTaQm+q9gwlIQ7JVedWw9jzHBIn80tCgTcavahAzyelk=
jobs:
  include:
  - {os: linux, python: '3.8', env: 'tracdb= build=minimum'}
  - {os: linux, python: '3.8', env: 'tracdb='}
  - {os: linux, python: '3.7', env: 'tracdb='}
  - {os: linux, python: '3.6', env: 'tracdb='}
  - {os: linux, python: '3.5', env: 'tracdb='}
  - {os: linux, python: '3.8', env: 'tracdb=sqlite'}
  - {os: linux, python: '3.8', env: 'tracdb=postgresql', services: postgresql}
  - {os: linux, python: '3.8', env: 'tracdb=mysql', services: mysql}
  - {os: osx, language: generic, env: 'pyver=3.8 tracdb= build=minimum'}
  - {os: osx, language: generic, env: 'pyver=3.8 tracdb='}
  - {os: osx, language: generic, env: 'pyver=3.8 tracdb=sqlite'}
  - {os: osx, language: generic, env: 'pyver=3.8 tracdb=postgresql'}
  - stage: deploy
    before_script: skip
    script: skip
    deploy:
      provider: script
      skip_cleanup: true
      script: scp -i "$keyfile" dist/Trac-* travis@edgewall.org:/var/ftp/pub/trac/incoming
      on:
        repo: edgewall/trac
        all_branches: true
